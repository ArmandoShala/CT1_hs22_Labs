


ARM Macro Assembler    Page 1 


    1 00000000         ; ------------------------------------------------------
                       ------------
    2 00000000         ; --  _____       ______  _____                         
                                  -
    3 00000000         ; -- |_   _|     |  ____|/ ____|                        
                                  -
    4 00000000         ; --   | |  _  | |  | (___    Institute of Embedded Syst
                       ems    -
    5 00000000         ; --   | | | '_ \|  __|  \___ \   Zurich University of  
                                  -
    6 00000000         ; --  _| |_| | | | |____ ____) |  Applied Sciences      
                                  -
    7 00000000         ; -- |_____|_| |_|______|_____/   8401 Winterthur, Switz
                       erland     -
    8 00000000         ; ------------------------------------------------------
                       ------------
    9 00000000         ; --
   10 00000000         ; -- main.s
   11 00000000         ; --
   12 00000000         ; -- CT1 P06 "ALU und Sprungbefehle" mit MUL
   13 00000000         ; --
   14 00000000         ; -- $Id: main.s 4857 2019-09-10 17:30:17Z akdi $
   15 00000000         ; ------------------------------------------------------
                       ------------
   16 00000000         ;Directives
   17 00000000                 PRESERVE8
   18 00000000                 THUMB
   19 00000000         
   20 00000000         ; ------------------------------------------------------
                       ------------
   21 00000000         ; -- Address Defines
   22 00000000         ; ------------------------------------------------------
                       ------------
   23 00000000         
   24 00000000 60000100 
                       ADDR_LED_15_0
                               EQU              0x60000100
   25 00000000 60000102 
                       ADDR_LED_31_16
                               EQU              0x60000102
   26 00000000 60000200 
                       ADDR_DIP_SWITCH_7_0
                               EQU              0x60000200
   27 00000000 60000201 
                       ADDR_DIP_SWITCH_15_8
                               EQU              0x60000201
   28 00000000 60000114 
                       ADDR_7_SEG_BIN_DS3_0
                               EQU              0x60000114
   29 00000000 60000210 
                       ADDR_BUTTONS
                               EQU              0x60000210
   30 00000000         
   31 00000000 60000340 
                       ADDR_LCD_RED
                               EQU              0x60000340
   32 00000000 60000342 
                       ADDR_LCD_GREEN
                               EQU              0x60000342



ARM Macro Assembler    Page 2 


   33 00000000 60000344 
                       ADDR_LCD_BLUE
                               EQU              0x60000344
   34 00000000 0000FFFF 
                       LCD_BACKLIGHT_FULL
                               EQU              0xffff
   35 00000000 00000000 
                       LCD_BACKLIGHT_OFF
                               EQU              0x0000
   36 00000000 0000000A 
                       MY_CONST_A
                               EQU              0x0A
   37 00000000 00000010 
                       MY_CONST_10
                               EQU              0x10
   38 00000000 00000000 
                       MY_ZERO EQU              0x00
   39 00000000         
   40 00000000         ; ------------------------------------------------------
                       ------------
   41 00000000         ; -- myCode
   42 00000000         ; ------------------------------------------------------
                       ------------
   43 00000000                 AREA             myCode, CODE, READONLY
   44 00000000         
   45 00000000                 ENTRY
   46 00000000         
   47 00000000         main    PROC
   48 00000000                 export           main
   49 00000000         
   50 00000000         ; STUDENTS: To be programmed
   51 00000000         ;Task 3.1
   52 00000000         ;Load value of DIP_Switches 
   53 00000000 4916            LDR              R1, =ADDR_DIP_SWITCH_7_0
   54 00000002 7809            LDRB             R1, [R1]
   55 00000004         
   56 00000004 4A16            LDR              R2, =ADDR_DIP_SWITCH_15_8
   57 00000006 7812            LDRB             R2, [R2]
   58 00000008         
   59 00000008         ;Clear the last 4 digits of the BCD tens so that it cant
                        go over 9
   60 00000008 23F0            MOVS             R3, #0xF0
   61 0000000A 4399            BICS             R1, R1, R3
   62 0000000C 439A            BICS             R2, R2, R3
   63 0000000E         
   64 0000000E         ;Check if Button T0 is pressed -> First load the value o
                       f T0   
   65 0000000E 4E15            LDR              R6, =ADDR_BUTTONS
   66 00000010 7836            LDRB             R6, [R6, #0]
   67 00000012 439E            BICS             R6, R6, R3
   68 00000014         
   69 00000014         
   70 00000014         ;If T0 is equals 0 then jump to the shifting process, el
                       se use the mul process
   71 00000014 4F14            LDR              R7, =MY_ZERO
   72 00000016 42BE            CMP              R6, R7
   73 00000018 D008            BEQ              jump_to_shifting_process
   74 0000001A         
   75 0000001A         ;Here starts the Multiplication process, mul the BCD ten



ARM Macro Assembler    Page 3 


                        value so it shifts 4 bits to the left
   76 0000001A 4D14            LDR              R5, =MY_CONST_10
   77 0000001C 436A            MULS             R2, R5, R2
   78 0000001E         ;Set Background to blue
   79 0000001E 4E14            LDR              R6, =ADDR_LCD_BLUE
   80 00000020 4F14            LDR              R7, =0xffff
   81 00000022 8037            STRH             R7, [R6]
   82 00000024         
   83 00000024         ;Clear red so it wont merge
   84 00000024 4E14            LDR              R6, =ADDR_LCD_RED
   85 00000026 4F10            LDR              R7, =0x0000
   86 00000028 8037            STRH             R7, [R6]
   87 0000002A         ;Jump to the point where it does not matter which proces
                       s was used
   88 0000002A E006            B                after_process
   89 0000002C         ;Here starts the shifting method.
   90 0000002C         ;Shift the BCD tens 4 bits to the left
   91 0000002C         jump_to_shifting_process
   92 0000002C 0112            LSLS             R2, R2, #4
   93 0000002E         ;Set background to red
   94 0000002E 4E12            LDR              R6, =ADDR_LCD_RED
   95 00000030 4F10            LDR              R7, =0xffff
   96 00000032 8037            STRH             R7, [R6]
   97 00000034         ;Clear blue so it wont merge
   98 00000034 4E0E            LDR              R6, =ADDR_LCD_BLUE
   99 00000036 4F0C            LDR              R7, =0x0000
  100 00000038 8037            STRH             R7, [R6]
  101 0000003A         ;Combine the BCD tens with the BCD ones
  102 0000003A         after_process
  103 0000003A 188B            ADDS             R3, R1, R2
  104 0000003C         
  105 0000003C         ;Load the adress of the Leds 
  106 0000003C 4C0F            LDR              R4, =ADDR_LED_15_0
  107 0000003E         ;Store the BCD value into the Led
  108 0000003E 7023            STRB             R3, [R4]
  109 00000040         
  110 00000040         ;To get the Binary value, Mul the BCD tens with 10 and a
                       dd the BCD ones
  111 00000040 4D0F            LDR              R5, =MY_CONST_A
  112 00000042 4A07            LDR              R2, =ADDR_DIP_SWITCH_15_8
  113 00000044 7812            LDRB             R2, [R2]
  114 00000046         
  115 00000046 436A            MULS             R2, R5, R2
  116 00000048 1852            ADDS             R2, R2, R1
  117 0000004A         
  118 0000004A 7062            STRB             R2, [R4, #1]
  119 0000004C         
  120 0000004C         ; END: To be programmed
  121 0000004C         
  122 0000004C E7FE            B                main
  123 0000004E                 ENDP
  124 0000004E         
  125 0000004E         ;----------------------------------------------------
  126 0000004E         ; Subroutines
  127 0000004E         ;----------------------------------------------------
  128 0000004E         
  129 0000004E         ;----------------------------------------------------
  130 0000004E         ; pause for disco_lights
  131 0000004E         pause   PROC



ARM Macro Assembler    Page 4 


  132 0000004E B403            PUSH             {R0, R1}
  133 00000050 490C            LDR              R1, =1
  134 00000052 480D            LDR              R0, =0x000FFFFF
  135 00000054         
  136 00000054         loop
  137 00000054 1A40            SUBS             R0, R0, R1
  138 00000056 D2FD            BCS              loop
  139 00000058         
  140 00000058 BC03            POP              {R0, R1}
  141 0000005A 4770            BX               LR
  142 0000005C                 ALIGN
  143 0000005C                 ENDP
  144 0000005C         
  145 0000005C         ; ------------------------------------------------------
                       ------------
  146 0000005C         ; End of code
  147 0000005C         ; ------------------------------------------------------
                       ------------
  148 0000005C                 END
              60000200 
              60000201 
              60000210 
              00000000 
              00000010 
              60000344 
              0000FFFF 
              60000340 
              60000100 
              0000000A 
              00000001 
              000FFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --depend=.\bu
ild\main.d -o.\build\main.o -I.\RTE\_Target_1 -IC:\Users\armandoshala\AppData\L
ocal\Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Users\armandoshala\
AppData\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include\m0 -IC:\Users\a
rmandoshala\AppData\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\HAL\Include --pred
efine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 537" --predefine="_RT
E_ SETA 1" --predefine="_RTE_ SETA 1" --list=.\build\main.lst app\main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

after_process 0000003A

Symbol: after_process
   Definitions
      At line 102 in file app\main.s
   Uses
      At line 88 in file app\main.s
Comment: after_process used once
jump_to_shifting_process 0000002C

Symbol: jump_to_shifting_process
   Definitions
      At line 91 in file app\main.s
   Uses
      At line 73 in file app\main.s
Comment: jump_to_shifting_process used once
loop 00000054

Symbol: loop
   Definitions
      At line 136 in file app\main.s
   Uses
      At line 138 in file app\main.s
Comment: loop used once
main 00000000

Symbol: main
   Definitions
      At line 47 in file app\main.s
   Uses
      At line 48 in file app\main.s
      At line 122 in file app\main.s

myCode 00000000

Symbol: myCode
   Definitions
      At line 43 in file app\main.s
   Uses
      None
Comment: myCode unused
pause 0000004E

Symbol: pause
   Definitions
      At line 131 in file app\main.s
   Uses
      None
Comment: pause unused
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDR_7_SEG_BIN_DS3_0 60000114

Symbol: ADDR_7_SEG_BIN_DS3_0
   Definitions
      At line 28 in file app\main.s
   Uses
      None
Comment: ADDR_7_SEG_BIN_DS3_0 unused
ADDR_BUTTONS 60000210

Symbol: ADDR_BUTTONS
   Definitions
      At line 29 in file app\main.s
   Uses
      At line 65 in file app\main.s
Comment: ADDR_BUTTONS used once
ADDR_DIP_SWITCH_15_8 60000201

Symbol: ADDR_DIP_SWITCH_15_8
   Definitions
      At line 27 in file app\main.s
   Uses
      At line 56 in file app\main.s
      At line 112 in file app\main.s

ADDR_DIP_SWITCH_7_0 60000200

Symbol: ADDR_DIP_SWITCH_7_0
   Definitions
      At line 26 in file app\main.s
   Uses
      At line 53 in file app\main.s
Comment: ADDR_DIP_SWITCH_7_0 used once
ADDR_LCD_BLUE 60000344

Symbol: ADDR_LCD_BLUE
   Definitions
      At line 33 in file app\main.s
   Uses
      At line 79 in file app\main.s
      At line 98 in file app\main.s

ADDR_LCD_GREEN 60000342

Symbol: ADDR_LCD_GREEN
   Definitions
      At line 32 in file app\main.s
   Uses
      None
Comment: ADDR_LCD_GREEN unused
ADDR_LCD_RED 60000340

Symbol: ADDR_LCD_RED
   Definitions
      At line 31 in file app\main.s
   Uses
      At line 84 in file app\main.s
      At line 94 in file app\main.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

ADDR_LED_15_0 60000100

Symbol: ADDR_LED_15_0
   Definitions
      At line 24 in file app\main.s
   Uses
      At line 106 in file app\main.s
Comment: ADDR_LED_15_0 used once
ADDR_LED_31_16 60000102

Symbol: ADDR_LED_31_16
   Definitions
      At line 25 in file app\main.s
   Uses
      None
Comment: ADDR_LED_31_16 unused
LCD_BACKLIGHT_FULL 0000FFFF

Symbol: LCD_BACKLIGHT_FULL
   Definitions
      At line 34 in file app\main.s
   Uses
      None
Comment: LCD_BACKLIGHT_FULL unused
LCD_BACKLIGHT_OFF 00000000

Symbol: LCD_BACKLIGHT_OFF
   Definitions
      At line 35 in file app\main.s
   Uses
      None
Comment: LCD_BACKLIGHT_OFF unused
MY_CONST_10 00000010

Symbol: MY_CONST_10
   Definitions
      At line 37 in file app\main.s
   Uses
      At line 76 in file app\main.s
Comment: MY_CONST_10 used once
MY_CONST_A 0000000A

Symbol: MY_CONST_A
   Definitions
      At line 36 in file app\main.s
   Uses
      At line 111 in file app\main.s
Comment: MY_CONST_A used once
MY_ZERO 00000000

Symbol: MY_ZERO
   Definitions
      At line 38 in file app\main.s
   Uses
      At line 71 in file app\main.s
Comment: MY_ZERO used once
14 symbols
355 symbols in table
