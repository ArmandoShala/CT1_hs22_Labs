


ARM Macro Assembler    Page 1 


    1 00000000         ; ------------------------------------------------------
                       ------------
    2 00000000         ; --  _____       ______  _____                         
                                  -
    3 00000000         ; -- |_   _|     |  ____|/ ____|                        
                                  -
    4 00000000         ; --   | |  _ __ | |__  | (___    Institute of Embedded 
                       Systems    -
    5 00000000         ; --   | | | '_ \|  __|  \___ \   Zurich University of  
                                  -
    6 00000000         ; --  _| |_| | | | |____ ____) |  Applied Sciences      
                                  -
    7 00000000         ; -- |_____|_| |_|______|_____/   8401 Winterthur, Switz
                       erland     -
    8 00000000         ; ------------------------------------------------------
                       ------------
    9 00000000         ; --
   10 00000000         ; -- table.s
   11 00000000         ; --
   12 00000000         ; -- CT1 P04 Ein- und Ausgabe von Tabellenwerten
   13 00000000         ; --
   14 00000000         ; -- $Id: table.s 800 2014-10-06 13:19:25Z ruan $
   15 00000000         ; ------------------------------------------------------
                       ------------
   16 00000000         ;Directives
   17 00000000                 PRESERVE8
   18 00000000                 THUMB
   19 00000000         ; ------------------------------------------------------
                       ------------
   20 00000000         ; -- Symbolic Literals
   21 00000000         ; ------------------------------------------------------
                       ------------
   22 00000000 60000200 
                       ADDR_DIP_SWITCH_7_0
                               EQU              0x60000200
   23 00000000 60000201 
                       ADDR_DIP_SWITCH_15_8
                               EQU              0x60000201
   24 00000000 60000203 
                       ADDR_DIP_SWITCH_31_24
                               EQU              0x60000203
   25 00000000 60000100 
                       ADDR_LED_7_0
                               EQU              0x60000100
   26 00000000 60000101 
                       ADDR_LED_15_8
                               EQU              0x60000101
   27 00000000 60000102 
                       ADDR_LED_23_16
                               EQU              0x60000102
   28 00000000 60000103 
                       ADDR_LED_31_24
                               EQU              0x60000103
   29 00000000 60000210 
                       ADDR_BUTTONS
                               EQU              0x60000210
   30 00000000 60000114 
                       ADDR_SEG7_BIN
                               EQU              0x60000114



ARM Macro Assembler    Page 2 


   31 00000000         
   32 00000000 00000001 
                       BITMASK_KEY_T0
                               EQU              0x01
   33 00000000 0000000F 
                       BITMASK_LOWER_NIBBLE
                               EQU              0x0F
   34 00000000         
   35 00000000         ; ------------------------------------------------------
                       ------------
   36 00000000         ; -- Variables
   37 00000000         ; ------------------------------------------------------
                       ------------
   38 00000000                 AREA             MyAsmVar, DATA, READWRITE
   39 00000000         ; STUDENTS: To be programmed
   40 00000000         
   41 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    data1   SPACE            32
   42 00000020         
   43 00000020         
   44 00000020         
   45 00000020         ; END: To be programmed
   46 00000020                 ALIGN
   47 00000020         
   48 00000020         ; ------------------------------------------------------
                       ------------
   49 00000020         ; -- myCode
   50 00000020         ; ------------------------------------------------------
                       ------------
   51 00000020                 AREA             myCode, CODE, READONLY
   52 00000000         
   53 00000000         main2   PROC
   54 00000000                 EXPORT           main2
   55 00000000         
   56 00000000         readInput
   57 00000000 F000 F820       BL               waitForKey  ; wait for key to b
                                                            e pressed and relea
                                                            sed
   58 00000004         ; STUDENTS: To be programmed
   59 00000004         
   60 00000004         ;Read input
   61 00000004 4915            LDR              R1, =ADDR_DIP_SWITCH_7_0 ; load
                                                             input from dip swi
                                                            tches 7 - 0
   62 00000006 780A            LDRB             R2, [R1]    ; Load value at dip
                                                             switch into R2
   63 00000008         
   64 00000008         
   65 00000008 4B15            LDR              R3, =ADDR_DIP_SWITCH_15_8 ; Loa
                                                            d addr of dip switc



ARM Macro Assembler    Page 3 


                                                            hes 15 - 8
   66 0000000A 781C            LDRB             R4, [R3]    ; Load value at dip
                                                             switch into R4
   67 0000000C         
   68 0000000C 4F15            LDR              R7, =BITMASK_LOWER_NIBBLE ; Put
                                                             bitmask over nibbl
                                                            e
   69 0000000E 403C            ANDS             R4, R4, R7  ; Logical and to ap
                                                            ply bitmask
   70 00000010         
   71 00000010         ;Do logical operations for half words
   72 00000010 0224            LSLS             R4, R4, #8  ;Shift existing bit
                                                            s one byte to the l
                                                            eft to make space f
                                                            or switches 7-0
   73 00000012 1912            ADDS             R2, R4      ;Store Value of 15-
                                                            8 into most signifi
                                                            cant byte
   74 00000014 0A24            LSRS             R4, R4, #8  ;Shift bits back so
                                                             we can use the sam
                                                            e register for late
                                                            r
   75 00000016         
   76 00000016         ;Load Table
   77 00000016 4D14            LDR              R5, =data1  ;load starting addr
                                                            ess of table into R
                                                            5
   78 00000018 0064            LSLS             R4, R4, #1  ;Shift index one bi
                                                            t to the left to do
                                                            uble it and account
                                                             for half words
   79 0000001A 532A            STRH             R2, [R5, R4] ;Store half word v
                                                            alues from R2 to R5
                                                             with offset R4
   80 0000001C         
   81 0000001C         ;Write to lower LEDs
   82 0000001C 4E13            LDR              R6, =ADDR_LED_7_0 ; load addres
                                                            s of led 7-0 into r
                                                            6
   83 0000001E 7032            STRB             R2, [R6]    ; store value for l
                                                            eds into r6
   84 00000020 4F13            LDR              R7, =ADDR_LED_15_8 ; load addre
                                                            ss of led 15-8
   85 00000022 0A12            LSRS             R2, R2, #8  ;Shift R4 one byte 
                                                            to the right to let
                                                             the correct led li
                                                            ght up in the input
                                                             index
   86 00000024 603A            STR              R2, [R7]    ; store value for l
                                                            eds into address at
                                                             R7
   87 00000026         
   88 00000026         ;Load index switches for output
   89 00000026 4913            LDR              R1, =ADDR_DIP_SWITCH_31_24 ; lo
                                                            ad input from dip s
                                                            witches 31 - 24
   90 00000028 780A            LDRB             R2, [R1]    ; Load value at dip
                                                             switch into R2
   91 0000002A         



ARM Macro Assembler    Page 4 


   92 0000002A 4F0E            LDR              R7, =BITMASK_LOWER_NIBBLE ; Put
                                                             bitmask over nibbl
                                                            e
   93 0000002C 403A            ANDS             R2, R2, R7
   94 0000002E         
   95 0000002E         ;Light up output index LEDs
   96 0000002E 4E12            LDR              R6, =ADDR_LED_31_24 ; load addr
                                                            ess of led 31-24 in
                                                            to r6
   97 00000030 6032            STR              R2, [R6]    ; store value for l
                                                            eds into address at
                                                             R6
   98 00000032         
   99 00000032         ;Read from table and light up output value LEDs
  100 00000032 0052            LSLS             R2, R2, #1  ;Shift index one bi
                                                            t to the left to do
                                                            uble it and account
                                                             for half words
  101 00000034 4F11            LDR              R7, =ADDR_LED_23_16 ;load addre
                                                            sses of led 23-16 i
                                                            nto R7 
  102 00000036 5AAB            LDRH             R3, [R5, R2] ;Load value of tab
                                                            le at index R2 into
                                                             R3
  103 00000038 603B            STR              R3, [R7]    ;Store value of R3 
                                                            into LEDs at R7
  104 0000003A         
  105 0000003A         ;Output index and value to 7 segment display 
  106 0000003A 4811            LDR              R0, =ADDR_SEG7_BIN
  107 0000003C 01D2            LSLS             R2, R2, #7  ;Shift index seven 
                                                            bits to the left to
                                                             make space for cor
                                                            responding values
  108 0000003E 18D2            ADDS             R2, R3      ;Add value halfword
                                                             to register
  109 00000040 6002            STR              R2, [R0]    ;Store value of R2 
                                                            into 7 segment disp
                                                            lay
  110 00000042         
  111 00000042         ;Note: I could have read the output index from the table
                        but in case where that index would have been empty (bec
                       ause no input has been stored yet) the output index woul
                       d have been empty as well on the 7 segment display which
                        makes no sense since the output index is determined by 
                       the switch position and not the table entry.
  112 00000042         
  113 00000042         ; END: To be programmed
  114 00000042 E7DD            B                readInput
  115 00000044                 ALIGN
  116 00000044         
  117 00000044         ; ------------------------------------------------------
                       ------------
  118 00000044         ; Subroutines
  119 00000044         ; ------------------------------------------------------
                       ------------
  120 00000044         
  121 00000044         ; wait for key to be pressed and released
  122 00000044         waitForKey
  123 00000044 B407            PUSH             {R0, R1, R2}



ARM Macro Assembler    Page 5 


  124 00000046 490F            LDR              R1, =ADDR_BUTTONS ; laod base a
                                                            ddress of keys
  125 00000048 4A0F            LDR              R2, =BITMASK_KEY_T0 
                                                            ; load key mask T0
  126 0000004A         
  127 0000004A         waitForPress
  128 0000004A 7808            LDRB             R0, [R1]    ; load key values
  129 0000004C 4210            TST              R0, R2      ; check, if key T0 
                                                            is pressed
  130 0000004E D0FC            BEQ              waitForPress
  131 00000050         
  132 00000050         waitForRelease
  133 00000050 7808            LDRB             R0, [R1]    ; load key values
  134 00000052 4210            TST              R0, R2      ; check, if key T0 
                                                            is released
  135 00000054 D1FC            BNE              waitForRelease
  136 00000056         
  137 00000056 BC07            POP              {R0, R1, R2}
  138 00000058 4770            BX               LR
  139 0000005A 00 00           ALIGN
  140 0000005C         
  141 0000005C         ; ------------------------------------------------------
                       ------------
  142 0000005C         ; End of code
  143 0000005C         ; ------------------------------------------------------
                       ------------
  144 0000005C                 ENDP
  145 0000005C                 END
              60000200 
              60000201 
              0000000F 
              00000000 
              60000100 
              60000101 
              60000203 
              60000103 
              60000102 
              60000114 
              60000210 
              00000001 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --depend=.\bu
ild\halfword.d -o.\build\halfword.o -I.\RTE\_Target_1 -IC:\Users\armandoshala\A
ppData\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Users\arman
doshala\AppData\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include\m0 -IC:
\Users\armandoshala\AppData\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\HAL\Includ
e --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 537" --predef
ine="_RTE_ SETA 1" --predefine="_RTE_ SETA 1" --list=.\build\halfword.lst halfw
ord.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyAsmVar 00000000

Symbol: MyAsmVar
   Definitions
      At line 38 in file halfword.s
   Uses
      None
Comment: MyAsmVar unused
data1 00000000

Symbol: data1
   Definitions
      At line 41 in file halfword.s
   Uses
      At line 77 in file halfword.s
Comment: data1 used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

main2 00000000

Symbol: main2
   Definitions
      At line 53 in file halfword.s
   Uses
      At line 54 in file halfword.s
Comment: main2 used once
myCode 00000000

Symbol: myCode
   Definitions
      At line 51 in file halfword.s
   Uses
      None
Comment: myCode unused
readInput 00000000

Symbol: readInput
   Definitions
      At line 56 in file halfword.s
   Uses
      At line 114 in file halfword.s
Comment: readInput used once
waitForKey 00000044

Symbol: waitForKey
   Definitions
      At line 122 in file halfword.s
   Uses
      At line 57 in file halfword.s
Comment: waitForKey used once
waitForPress 0000004A

Symbol: waitForPress
   Definitions
      At line 127 in file halfword.s
   Uses
      At line 130 in file halfword.s
Comment: waitForPress used once
waitForRelease 00000050

Symbol: waitForRelease
   Definitions
      At line 132 in file halfword.s
   Uses
      At line 135 in file halfword.s
Comment: waitForRelease used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDR_BUTTONS 60000210

Symbol: ADDR_BUTTONS
   Definitions
      At line 29 in file halfword.s
   Uses
      At line 124 in file halfword.s
Comment: ADDR_BUTTONS used once
ADDR_DIP_SWITCH_15_8 60000201

Symbol: ADDR_DIP_SWITCH_15_8
   Definitions
      At line 23 in file halfword.s
   Uses
      At line 65 in file halfword.s
Comment: ADDR_DIP_SWITCH_15_8 used once
ADDR_DIP_SWITCH_31_24 60000203

Symbol: ADDR_DIP_SWITCH_31_24
   Definitions
      At line 24 in file halfword.s
   Uses
      At line 89 in file halfword.s
Comment: ADDR_DIP_SWITCH_31_24 used once
ADDR_DIP_SWITCH_7_0 60000200

Symbol: ADDR_DIP_SWITCH_7_0
   Definitions
      At line 22 in file halfword.s
   Uses
      At line 61 in file halfword.s
Comment: ADDR_DIP_SWITCH_7_0 used once
ADDR_LED_15_8 60000101

Symbol: ADDR_LED_15_8
   Definitions
      At line 26 in file halfword.s
   Uses
      At line 84 in file halfword.s
Comment: ADDR_LED_15_8 used once
ADDR_LED_23_16 60000102

Symbol: ADDR_LED_23_16
   Definitions
      At line 27 in file halfword.s
   Uses
      At line 101 in file halfword.s
Comment: ADDR_LED_23_16 used once
ADDR_LED_31_24 60000103

Symbol: ADDR_LED_31_24
   Definitions
      At line 28 in file halfword.s
   Uses
      At line 96 in file halfword.s
Comment: ADDR_LED_31_24 used once
ADDR_LED_7_0 60000100

Symbol: ADDR_LED_7_0



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 25 in file halfword.s
   Uses
      At line 82 in file halfword.s
Comment: ADDR_LED_7_0 used once
ADDR_SEG7_BIN 60000114

Symbol: ADDR_SEG7_BIN
   Definitions
      At line 30 in file halfword.s
   Uses
      At line 106 in file halfword.s
Comment: ADDR_SEG7_BIN used once
BITMASK_KEY_T0 00000001

Symbol: BITMASK_KEY_T0
   Definitions
      At line 32 in file halfword.s
   Uses
      At line 125 in file halfword.s
Comment: BITMASK_KEY_T0 used once
BITMASK_LOWER_NIBBLE 0000000F

Symbol: BITMASK_LOWER_NIBBLE
   Definitions
      At line 33 in file halfword.s
   Uses
      At line 68 in file halfword.s
      At line 92 in file halfword.s

11 symbols
354 symbols in table
